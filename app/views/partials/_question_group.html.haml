- renderer = g.renderer
- unless g.display_type == "hidden"
  %fieldset{ :id => "g_#{g.id}", :class => "g_#{renderer} #{g.css_class(@response_set)}" }
    %legend="#{next_question_number(g)}#{g.text_for(@render_context, I18n.locale)}".html_safe
    %span.help= g.help_text_for(@render_context, I18n.locale)
    - case renderer
    - when :grid
      %table
        %col.pre
          - qs.first.answers.each do |_answer|
            %col{ class: cycle('odd', 'even') }
          %col.post
          %tbody
            - qs.each_slice(10) do |ten_questions| # header row every 10 questions
              %tr
                %th
                - ten_questions.first.answers.each do |a|
                  %th
                    = a.text_for(nil, @render_context, I18n.locale)
                    %span.help= a.help_text_for(@render_context, I18n.locale)
                %th
              - ten_questions.each_with_index do |q, i|
                %tr{ id: "q_#{q.id}", class: "q_#{renderer} #{q.css_class(@response_set)}" }
                  %th
                    = q.text_for(:pre, @render_context, I18n.locale)
                    = q.help_text_for(@render_context, I18n.locale)
                  = render('partials/answers', answers: q.answers, question: q, g: g, disabled: false, index: i, grid: true)
                  %th= q.text_for(:post, @render_context, I18n.locale)
    - when :repeater
      - (@response_set.count_group_responses(qs) + 1).times do |rg|
        %div
          - qs.each_with_index do |q, index_in_group|
            = render q.custom_renderer || "/partials/question", :g => g, :rg => rg, :q => q, :f => f, index: "#{index}#{index_in_group}"
      = submit_tag("+ add row", :name => "section[#{@section.id}][g_#{g.id}]", :class => "add_row")
    - else # :inline
      - qs.each_with_index do |q, index_in_group|
        = render q.custom_renderer || "/partials/question", :g => g, :q => q, :f => f, index: "#{index}#{index_in_group}"
